Include: include/setup.vader

Execute (neomake#compat#uniq):
  AssertEqual neomake#compat#uniq([]), []
  AssertEqual neomake#compat#uniq([1, 2]), [1, 2]
  AssertEqual neomake#compat#uniq([1, 2, 1]), [1, 2, 1]
  AssertEqual neomake#compat#uniq([1, 1, 2]), [1, 2]

Execute (neomake#compat#reltimefloat):
  let r = neomake#compat#reltimefloat()
  AssertEqual type(r), type(0.0)
  let r2 = neomake#compat#reltimefloat()
  Assert r2 > r, '2nd result is bigger'

Execute (neomake#compat#systemlist):
  let r = neomake#compat#systemlist(['echo 1'])
  if has('nvim')
    AssertEqual r, ''
  else
    AssertEqual r, ['/bin/bash: echo 1: command not found']
    AssertEqual v:shell_error, 127
  endif

  AssertEqual neomake#compat#systemlist(['echo', '1']), ['1']
  AssertEqual v:shell_error, 0
  AssertEqual neomake#compat#systemlist(['sh', '-c', 'echo 1; echo  2']), ['1', '2']
  AssertEqual v:shell_error, 0
  AssertEqual neomake#compat#systemlist(['echo', '1 2']), ['1 2']
  AssertEqual v:shell_error, 0
  AssertEqual neomake#compat#systemlist(['printf', '%s\n', '1', '2']), ['1', '2']
  AssertEqual v:shell_error, 0

Execute (neomake#compat#systemlist with empty args):
  AssertEqual neomake#compat#systemlist(''), []
  AssertEqual neomake#compat#systemlist([]), []
  AssertEqual neomake#compat#systemlist('0'), ['/bin/bash: 0: command not found']

Execute (neomake#compat#get_argv on (emulated) Windows):
  Save &shell, &shellcmdflag
  set shell=cmd.exe
  set shellcmdflag=/c
  function! neomake#utils#IsRunningWindows()
    return 1
  endfunction
  runtime autoload/neomake/compat.vim

  try
    let out = neomake#compat#get_argv('sh', ['-c', 'echo 1'], 1)
    if has('nvim')
      AssertEqual out, 'sh -c "echo 1"'
    else
      if neomake#has_async_support()
        AssertEqual out, 'cmd.exe /c sh -c "echo 1"'
      else
        AssertEqual out, 'sh -c "echo 1"'
      endif

      " Does not get wrapped in shell twice.
      let out = neomake#compat#get_argv('cmd.exe', ['/c', 'echo 1'], 1)
      AssertEqual out, 'cmd.exe /c "echo 1"'
    endif
  finally
    " Undo monkeypatch.
    runtime autoload/neomake/utils.vim
    runtime autoload/neomake/compat.vim
  endtry
