" Based on https://github.com/tweekmonster/braceless.vim/blob/master/test/vim/vimrc
" TODO: provide this by default in the Docker image already?!  e.g. /vimrc?!

set noloadplugins

" Indicator for tests being run.
let g:neomake_test_messages = []

" Shorter timeouts during tests.
let g:neomake_action_queue_timeouts = {1: 10, 2: 20, 3: 30}

if exists('$TESTS_VADER_DIR')
  let vader_dir = expand($TESTS_VADER_DIR)
else
  let vader_dir = expand('<sfile>:p:h').'/plugins/vader'
endif
let &runtimepath .= ','.vader_dir
exe 'source' vader_dir.'/plugin/vader.vim'

let s:plugins_dir = expand('<sfile>:p:h').'/plugins/'
let s:sourced_plugins = []
function! s:load_plugin_on_demand(name) abort
  Save &runtimepath
  let dir = s:plugins_dir.a:name
  let &runtimepath .= ','.dir
  if index(s:sourced_plugins, a:name) == -1
    exe 'source' dir.'/plugin/'.a:name.'.vim'
    call add(s:sourced_plugins, a:name)
  endif
endfunction
command! -nargs=1 NeomakeTestsLoadPlugin call s:load_plugin_on_demand(<args>)

let plugin_dir = expand('<sfile>:p:h:h:h')
let &runtimepath .= ','.plugin_dir

let coverage_file = $NEOMAKE_COVERAGE_FILE
if !empty(coverage_file) && has('profile')
  if filereadable(coverage_file)
    function! s:print_stderr(output)
      let lines = split(a:output, '\n')
      if !empty($VADER_OUTPUT_FILE)
        call writefile(lines, $VADER_OUTPUT_FILE, 'a')
      else
        let tmp = tempname()
        call writefile(lines, tmp)
        execute 'silent !cat '.tmp.' 1>&2'
        call delete(tmp)
      endif
    endfunction

    let error = 'Error: NEOMAKE_COVERAGE_FILE: file exists, not overwriting: '.coverage_file
    call s:print_stderr(error)
    cquit  " exit non-zero.
  else
    exec 'profile start '.coverage_file
    exe 'profile! file plugin/*.vim'
    exe 'profile! file autoload/*.vim'
  endif
endif

exe 'source' plugin_dir.'/plugin/neomake.vim'

filetype plugin indent on

augroup ssshhhhhh
  autocmd VimEnter * set visualbell t_vb=
  autocmd GUIEnter * set visualbell t_vb=
augroup END

set noswapfile
syntax on
set number
set background=dark
set colorcolumn=80
set showcmd
set lazyredraw
set tabstop=4
set softtabstop=4
set shiftwidth=4
set expandtab
set backspace=2
set nofoldenable
set foldmethod=syntax
set foldlevelstart=10
set foldnestmax=10
set ttimeoutlen=0
set cmdheight=5
set textwidth=79
set hidden
set splitbelow  " Easier for window numbers (incrementing).


set debug=msg,throw

let mapleader=','

" No '-- More --' prompt, which would hang Travis.
set nomore

if expand('$NEOMAKE_TEST_NO_COLORSCHEME') !=# '1'
  colorscheme default
endif
