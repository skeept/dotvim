:command -bar CS :execute 'Run AuStatus' | bwipeout! | bwipeout! | for file in split(glob(g:curtest.'repo/test/*'), "\n") | call delete(file) | endfor | R silent AuUpdate!
:W{{{1 :AuM
:R call mkdir('test')
:R silent edit hglines.lst
:execute 'silent cd ./'.g:curtest.'repo/test'
:AuMove
:silent cd ../..
:CS
:W{{{1 :AuM copy
:R silent edit hglines.lst
:execute 'silent cd ./'.g:curtest.'repo/test'
:AuMove copy
:silent cd ../..
:CS
:W{{{1 :AuM dir
:R silent edit alines.lst
:R AuMove test
:CS
:W{{{1 :AuM pat pat
:execute 'AuMove '.g:curtest.'repo/**.lst '.g:curtest.'repo/test/**.mkv'
:CS
:W{{{1 :AuM pat pat
:execute 'silent cd ./'.g:curtest.'repo/test'
:AuMove ../*.lst ../?*.zsh
:silent cd ../..
:CS
:W{{{1 :AuM pat dir
:R AuMove *.lst test
:CS
:W{{{1 :AuM rightrepl pat repl
:execute 'AuMove rightrepl '.g:curtest.'repo/**.lst '.g:curtest.'repo/test/\\1.mkv'
:CS
:W{{{1 :AuM leftpattern vimpat repl
:execute 'AuMove repo '.g:curtest.'repo leftpattern \\v^([nh].*)\\.lst$ test/\\1.mkv'
:CS
:W{{{1 :AuM pretend pat pat
:W>>> Redirecting command output
:execute 'redir >> '.g:outfile
:execute 'AuMove pretend '.g:curtest.'repo/**.lst '.g:curtest.'repo/test/**.mkv'
:redir END
:W<<<
:CS
:source addmessages.vim
