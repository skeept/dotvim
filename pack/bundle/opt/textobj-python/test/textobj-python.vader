Before (Read in test.py):
  execute "read " . globpath(fnamemodify(g:vader_file, ":h"), "test.py")
  setf python
  normal 1Gdd

Execute (Regular inner function):
  call cursor(4, 5)
  normal vif<cr>
  AssertEqual 4, getpos("'<")[1]
  AssertEqual 7, getpos("'>")[1]

Execute (Regular a function):
  call cursor(4,5)
  normal vaf<cr>
  AssertEqual 3, getpos("'<")[1]
  AssertEqual 7, getpos("'>")[1]

Execute (Multiline defn inner function):
  call cursor(15, 11)
  normal vif<cr>
  AssertEqual 15, getpos("'<")[1]
  AssertEqual 18, getpos("'>")[1]

Execute (Multiline defn a function):
  call cursor(15, 11)
  normal vaf<cr>
  AssertEqual 13, getpos("'<")[1]
  AssertEqual 18, getpos("'>")[1]

Execute (One-liner inner function):
  call cursor(21, 12)
  normal vif<cr>
  AssertEqual 21, getpos("'<")[1]
  AssertEqual 21, getpos("'>")[1]

Execute (One-liner a function):
  call cursor(21, 12)
  normal vaf<cr>
  AssertEqual 21, getpos("'<")[1]
  AssertEqual 21, getpos("'>")[1]

Execute (FIXME Multiline defn one-liner inner function):
  call cursor(24, 5)
  normal vif<cr>
  AssertEqual 24, getpos("'<")[1]
  AssertEqual 25, getpos("'>")[1]

Execute (Multiline defn one-liner a function):
  call cursor(24, 5)
  normal vaf<cr>
  AssertEqual 24, getpos("'<")[1]
  AssertEqual 25, getpos("'>")[1]

Execute (Outer nested function inner function):
  call cursor(29, 1)
  normal vif<cr>
  AssertEqual 29, getpos("'<")[1]
  AssertEqual 34, getpos("'>")[1]

Execute (Outer nested function a function):
  call cursor(29, 1)
  normal vaf<cr>
  AssertEqual 28, getpos("'<")[1]
  AssertEqual 34, getpos("'>")[1]

Execute (Inner nested function inner function):
  call cursor(32, 1)
  normal vif<cr>
  AssertEqual 32, getpos("'<")[1]
  AssertEqual 33, getpos("'>")[1]

Execute (Inner nested function a function):
  call cursor(32, 1)
  normal vaf<cr>
  AssertEqual 31, getpos("'<")[1]
  AssertEqual 33, getpos("'>")[1]

Execute (Inner asynchronous function):
  call cursor(122, 1)
  normal vif<cr>
  AssertEqual 122, getpos("'<")[1]
  AssertEqual 123, getpos("'>")[1]

Execute (Outer asynchronous function):
  call cursor(122, 1)
  normal vaf<cr>
  AssertEqual 121, getpos("'<")[1]
  AssertEqual 123, getpos("'>")[1]

Execute (Simple inner class):
  call cursor(41, 1)
  normal vic<cr>
  AssertEqual 38, getpos("'<")[1]
  AssertEqual 44, getpos("'>")[1]

Execute (Simple a class):
  call cursor(41, 1)
  normal vac<cr>
  AssertEqual 37, getpos("'<")[1]
  AssertEqual 44, getpos("'>")[1]

Execute (Multiple members inner class):
  call cursor(52, 1)
  normal vic<cr>
  AssertEqual 48, getpos("'<")[1]
  AssertEqual 53, getpos("'>")[1]

Execute (Multiple members a class):
  call cursor(52, 1)
  normal vac<cr>
  AssertEqual 47, getpos("'<")[1]
  AssertEqual 53, getpos("'>")[1]

Execute (Nested classes outer inner class):
  call cursor(56, 1)
  normal vic<cr>
  AssertEqual 57, getpos("'<")[1]
  AssertEqual 58, getpos("'>")[1]

Execute (Nested classes outer a class):
  call cursor(56, 1)
  normal vac<cr>
  AssertEqual 56, getpos("'<")[1]
  AssertEqual 58, getpos("'>")[1]

Execute (Nested classes inner inner class):
  call cursor(57, 1)
  normal vic<cr>
  AssertEqual 58, getpos("'<")[1]
  AssertEqual 58, getpos("'>")[1]

Execute (Nested classes inner a class):
  call cursor(57, 1)
  normal vac<cr>
  AssertEqual 57, getpos("'<")[1]
  AssertEqual 58, getpos("'>")[1]

Execute (Class nested in function inner class):
  call cursor(65, 1)
  normal vic<cr>
  AssertEqual 66, getpos("'<")[1]
  AssertEqual 70, getpos("'>")[1]

Execute (Class nested in function a class):
  call cursor(65, 1)
  normal vac<cr>
  AssertEqual 65, getpos("'<")[1]
  AssertEqual 70, getpos("'>")[1]

Execute (Function while in class nested in function inner class):
  call cursor(65, 1)
  normal vif<cr>
  AssertEqual 62, getpos("'<")[1]
  AssertEqual 70, getpos("'>")[1]

Execute (Function while in class nested in function a class):
  call cursor(65, 1)
  normal vaf<cr>
  AssertEqual 61, getpos("'<")[1]
  AssertEqual 70, getpos("'>")[1]

Execute (Old-style no ancestor class inner class):
  call cursor(86, 9)
  normal vic<cr>
  AssertEqual 87, getpos("'<")[1]
  AssertEqual 91, getpos("'>")[1]

Execute (Old-style no ancestor class a class):
  call cursor(86, 9)
  normal vac<cr>
  AssertEqual 86, getpos("'<")[1]
  AssertEqual 91, getpos("'>")[1]

Execute (Don't cross scope for defn):
  /^class no_defs
  norm j
  let linenr = getpos(".")[1]
  norm vaf<cr>
  AssertEqual getpos(".")[1], linenr, "The line should not have changed."
  AssertThrows textobj#python#find_defn_line("def")

Execute (Decorator: function):
  /^def function_with_decorator(
  let linenr = getpos(".")[1]
"   debug call textobj#python#find_prev_decorators(linenr)
  AssertEqual linenr-1, textobj#python#find_prev_decorators(linenr)
  norm jvaf<cr>
  AssertEqual getline("."), "@decorator"
  AssertEqual getline("'>"), "pass"

Execute (Decorators: function):
  /^def function_with_decorators(
  norm jvaf<cr>
  AssertEqual getline("."), "@decorator"
  AssertEqual getline("'>"), "pass"

Execute (Decorators: inner function):
  /^def function_with_decorators(
  norm jvif<cr>
  AssertEqual getline("."), "# function_with_decorators"
  AssertEqual getline("'>"), "pass"

Execute (Decorators: inner function from decorator):
  /^def function_with_decorators(
  norm kvif<cr>
  AssertEqual getline("."), "# function_with_decorators"
  AssertEqual getline("'>"), "pass"

Execute (Decorators: inner function from decorators with multiple lines):
  /^def function_with_multiline_decorators(
  norm kvif<cr>
  AssertEqual getline("."), "# function_with_multiline_decorators"
  AssertEqual getline("'>"), "pass"

Execute (Decorators: inner function from decorators with multiple lines (2)):
  /^def function_with_multiline_decorators(
  norm 2kvif<cr>
  AssertEqual getline("."), "# function_with_multiline_decorators"
  AssertEqual getline("'>"), "pass"

Execute (Decorators: inner function from decorators with multiple lines (3)):
  /^def function_with_multiline_decorators(
  norm 9kvif<cr>
  AssertEqual getline("."), "# function_with_multiline_decorators"
  AssertEqual getline("'>"), "pass"

Execute (Decorators: inner function from decorators with multiple lines (4)):
  /^def function_with_multiline_decorators(
  norm 10kvif<cr>
  AssertEqual getline("."), "# function_with_multiline_decorators"
  AssertEqual getline("'>"), "pass"

Execute (Decorators: inner function from decorators with multiple lines (5)):
  /^def function_with_multiline_decorators(
  norm 11kvif<cr>
  AssertEqual getline("."), "# function_with_multiline_decorators"
  AssertEqual getline("'>"), "pass"

Execute (Decorators: inner function from decorators with multiple lines (6)):
  /^def function_with_multiline_decorators(
  norm 12kvif<cr>
  AssertEqual getline("."), "# function_with_multiline_decorators"
  AssertEqual getline("'>"), "pass"

Execute (FIXME Decorators: function with decorators with multiple lines):
  /^def function_with_multiline_decorators(
  norm kvaf
  AssertEqual getline("."), "@decorator"
  AssertEqual getline("'>"), "pass"

Execute (Decorators: a function from decorator):
  /^def function_with_decorators(
  norm kvaf<cr>
  AssertEqual getline("."), "@decorator"
  AssertEqual getline("'>"), "pass"

Execute (Decorator: class):
  /^class ClassWithDecorator:
  let linenr = getpos(".")[1]
  AssertEqual linenr-1, textobj#python#find_prev_decorators(linenr)
  norm jvac<cr>
  AssertEqual getline("."), "@decorator"
  AssertEqual getline("'>"), "pass"

Execute (Decorators: class):
  /^class ClassWithDecorators:
  norm jvac<cr>
  AssertEqual getline("."), "@decorator"
  AssertEqual getline("'>"), "pass"

Execute (Decorators: class from decorator):
  /^class ClassWithDecorators:
  norm kvac<cr>
  AssertEqual getline("."), "@decorator"
  AssertEqual getline("'>"), "pass"

Execute (Decorators: inner class from decorators with multiple lines):
  /^class ClassWithMultilineDecorators:
  norm kvic<cr>
  AssertEqual getline("."), "# ClassWithMultilineDecorators"
  AssertEqual getline("'>"), "pass"

Execute (Decorators: inner class from decorators with multiple lines (2)):
  /^class ClassWithMultilineDecorators:
  norm 2kvic<cr>
  AssertEqual getline("."), "# ClassWithMultilineDecorators"
  AssertEqual getline("'>"), "pass"

Execute (Decorators: inner class from decorators with multiple lines (3)):
  /^class ClassWithMultilineDecorators:
  norm 9kvic<cr>
  AssertEqual getline("."), "# ClassWithMultilineDecorators"
  AssertEqual getline("'>"), "pass"

Execute (Decorators: inner class from decorators with multiple lines (4)):
  /^class ClassWithMultilineDecorators:
  norm 10kvic<cr>
  AssertEqual getline("."), "# ClassWithMultilineDecorators"
  AssertEqual getline("'>"), "pass"

Execute (Decorators: inner class from decorators with multiple lines (5)):
  /^class ClassWithMultilineDecorators:
  norm 11kvic<cr>
  AssertEqual getline("."), "# ClassWithMultilineDecorators"
  AssertEqual getline("'>"), "pass"

Execute (Decorators: inner class from decorators with multiple lines (6)):
  /^class ClassWithMultilineDecorators:
  norm 12kvic<cr>
  AssertEqual getline("."), "# ClassWithMultilineDecorators"
  AssertEqual getline("'>"), "pass"

Execute (FIXME Decorators: class with decorators with multiple lines):
  /^class ClassWithMultilineDecorators:
  norm kvac
  AssertEqual getline("."), "@decorator"
  AssertEqual getline("'>"), "pass"
