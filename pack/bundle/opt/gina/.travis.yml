dist: trusty
sudo: false
language: generic

git:
  depth: 3

os:
  - linux
  - osx
env:
  - PROFILE=.profile VIM=vim  VIM_VERSION=HEAD
  - PROFILE=.profile VIM=vim  VIM_VERSION=v8.0.0027
  - PROFILE=.profile VIM=nvim VIM_VERSION=HEAD
  - PROFILE=.profile VIM=nvim VIM_VERSION=v0.2.0

cache:
  - directories:
    - $HOME/cache
    - $HOME/themis
    - $HOME/.cache/pip
    - $HOME/Library/Caches/Homebrew
before_cache:
  - rm -f $HOME/.cache/pip/log/debug.log

addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
      - llvm-toolchain-trusty-4.0
    packages:
      - autoconf
      - automake
      - apport
      - build-essential
      - clang-4.0
      - cmake
      - cscope
      - g++-5-multilib
      - g++-multilib
      - gcc-5-multilib
      - gcc-multilib
      - gdb
      - language-pack-tr
      - libc6-dev-i386
      - libtool
      - llvm-4.0-dev
      - locales
      - pkg-config
      - unzip
      - valgrind
      - xclip

      - gettext
      - libncurses5-dev
      - libacl1-dev
      - libgpm-dev
      - python-dev
      - python3-dev
      - python3-pip
      - pkg-config
      - lua5.2
      - liblua5.2-dev

install:
  - git config --global user.name "Travis"
  - git config --global user.email travis@example.com
  - export PYTHONUSERBASE="$HOME/.local"  # Override it for OS X
  - OS_NAME=${TRAVIS_OS_NAME} .ci/install.sh
  - export PATH="$HOME/vim/bin:$HOME/themis/bin:$PATH"
  - export THEMIS_HOME=$HOME/themis
  - export THEMIS_VIM=$VIM
  - if [ ${THEMIS_VIM} = "nvim" ]; then export THEMIS_ARGS="-e -s --headless"; fi

before_script:
  - echo $PATH
  - echo $THEMIS_HOME
  - echo $THEMIS_VIM
  - echo $THEMIS_ARGS
  - uname -a
  - which -a python
  - python --version
  - which -a python3
  - python3 --version
  - which -a $VIM
  - $VIM --version
  - which -a vint
  - vint --version
  - which -a themis
  - themis --version

script:
  - vint autoload/gina autoload/vital/__gina__ plugin ftplugin
  - themis --reporter dot
  - $THEMIS_VIM --cmd "try | helptags doc/ | catch | cquit | endtry" --cmd quit

after_success:
  - covimerage write_coverage $PROFILE
  - coverage xml
  - bash <(curl -s https://codecov.io/bash)
