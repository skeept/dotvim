VimL:" value-class File Template, Luc Hermitte <hermitte {at} free {dot} fr>, 25th Nov 2015
VimL:" hint: Value Class ((implicitly) copyable, no hierarchy)
MuT:  let s:destructor = s:Param("destructor", {})
VimL: if get(s:destructor, 'virtual', 0) | throw "Value classes aren't expected to belong to polymorphic hierarchies" | endif
VimL: " --- in case the class name is already known, no need to extract it
VimL: call s:Include('get-class-name', 'cpp/internals')
VimL: " --- Defines Doxygen comments
MuT:  let s:parameters = s:Param('cls_parameters', {})
VimL: call lh#dict#add_new(s:parameters, {'comments': {}, 'copyable': 1})
MuT:  let s:cls_comments = s:parameters.comments
VimL: let s:cls_comments.semantics = get(s:cls_comments, 'semantics', [])
VimL: let s:cls_comments.semantics += ['Value object',lh#marker#txt('Regular object'),lh#marker#txt('Comparable')]
VimL: " --- Force special functions
VimL: " TODO: detect when the class has no declared attribute. Propose to force the generation of empty shells for the special functions in case the object will contain non-copyable attributes
VimL: " --- Insert the skeleton built
VimL: call s:Include('class-skeleton', 'cpp/internals', s:parameters)
