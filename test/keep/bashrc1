# Sample .bashrc for SuSE Linux
# Copyright (c) SuSE GmbH Nuernberg

# There are 3 different types of shells in bash: the login shell, normal shell
# and interactive shell. Login shells read ~/.profile and interactive shells
# read ~/.bashrc; in our setup, .profile sources .bashrc - thus all settings
# made here will also take effect in a login shell.
#
# NOTE: It is recommended to make language settings in ~/.profile rather than
# here, since multilingual X sessions would not work properly if LANG is over-
# ridden in every subshell.

#-----------------------------------
# Source global definitions (if any)
#-----------------------------------

if type readlink >& /dev/null; then
  export CUR_SHELL=$(basename $(readlink -f /proc/$$/exe))
else # assume shell is bash
  export CUR_SHELL="bash"
fi

# read /etc/bashrc and /etc/profile if present
if test -z "$now_profile"; then
  export now_profile="0"
fi
prev_profile_time="$now_profile"
export now_profile=$(date +'%s')
let "time_diff = $now_profile - $prev_profile_time"
if test $time_diff -ge 3; then
  test -f /etc/bashrc && . /etc/bashrc
  test -f /etc/profile && . /etc/profile
fi

export EDITOR=vim

# Smart way of setting the DISPLAY variable (from Hans) :)
#
if test -z "$DISPLAY" -a "$TERM" = "xterm" -a -x /usr/bin/who ; then
    WHOAMI="`/usr/bin/who am i`"
    _DISPLAY="`expr "$WHOAMI" : '.*(\([^\.][^\.]*\).*)'`:0.0"
    if [ "${_DISPLAY}" != ":0:0.0" -a "${_DISPLAY}" != " :0.0" \
         -a "${_DISPLAY}" != ":0.0" ]; then
        export DISPLAY="${_DISPLAY}";
    fi
    unset WHOAMI _DISPLAY
fi

function addfolderstovariables ( )
{
  local DROOT="$1"
  export PATH="$DROOT/bin":"${PATH}"
  export LD_LIBRARY_PATH="$DROOT/lib":"${LD_LIBRARY_PATH}"
  export LD_LIBRARY_PATH="$DROOT/lib64":"${LD_LIBRARY_PATH}"
  export MANPATH="$DROOT/share/man":"$MANPATH"
}

function addDirToVarsFront()
{
  local DROOT="$1"
  export PATH="$DROOT/bin":"${PATH}"
  export LD_LIBRARY_PATH="$DROOT/lib":"${LD_LIBRARY_PATH}"
  #export LD_LIBRARY_PATH="$DROOT/lib/amd64":"${LD_LIBRARY_PATH}"
  export LD_LIBRARY_PATH="$DROOT/lib64":"${LD_LIBRARY_PATH}"
  export LD_LIBRARY_PATH="$DROOT/lib/amd64":"${LD_LIBRARY_PATH}"
  export MANPATH="$DROOT/share/man":"$MANPATH"
  export PKG_CONFIG_PATH="${DROOT}/lib/pkgconfig":":${PKG_CONFIG_PATH}"
}

function addDirToVarsBack()
{
  local DROOT="$1"
  export PATH="${PATH}":"$DROOT/bin"
  export LD_LIBRARY_PATH="${LD_LIBRARY_PATH}":"$DROOT/lib"
  #export LD_LIBRARY_PATH="${LD_LIBRARY_PATH}":"$DROOT/lib/amd64"
  export LD_LIBRARY_PATH="${LD_LIBRARY_PATH}":"$DROOT/lib64"
  export LD_LIBRARY_PATH="${LD_LIBRARY_PATH}":"$DROOT/lib/amd64"
  export MANPATH="$MANPATH":"$DROOT/share/man"
  export PKG_CONFIG_PATH="${PKG_CONFIG_PATH}":"${DROOT}/lib/pkgconfig"
}

# path : the ones going first
export PATH="${HOME}/usr/bin":${PATH}

# path: the ones going after the current setting
#dangerous:
export PATH=${PATH}:./Mybin

# LD_LIBRARY_PATH
export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:"/tmp/${HOME}/lib"
export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:"/tmp/$USER/lib"
export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:"/tmp/$USER/usr/lib"
export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:"${HOME}/lib"

export MANPATH=$MANPATH:"/tmp/$USER/man":"/tmp/$USER/local/man"

##################################################
# test if this machine is one of the unix machines
unix_machines="scepter ballista"
function query_is_unix {
  local is_unix=0
  for name in $unix_machines; do
    aux=`hostname | grep $name`
    if test -n "$aux" ; then
      echo "is_unix"
      break
    fi
  done
} #query is unix END
is_unix=`query_is_unix`
##################################################

declare t=/tmp/$USER

unset LS_COLORS

export DISPLAY0="$DISPLAY"

#export PATH="${PATH}:/opt/condor/bin"

export PYTHONSTARTUP=~/.pythonrc.py

# don't load any more settings if the shell is not interactive

# assume .bashrc correctly sets variable CONFIG_FILES_DIR and CONFIG_DOT_PREFIX
if test -n "$PS1"; then

  if [ -z "${CONFIG_FILES_DIR}" ]; then
    # assume HOME and .
    echo "Variable CONFIG_FILES_DIR not set. Setting it to HOME (${HOME})"
    export CONFIG_FILES_DIR="${HOME}"
    export CONFIG_DOT_PREFIX="."
  fi

  NAME="${CONFIG_FILES_DIR}/${CONFIG_DOT_PREFIX}alias"
  [ -e "${NAME}" ] && . "${NAME}"

  NAME="${CONFIG_FILES_DIR}/${CONFIG_DOT_PREFIX}bashrc2"
  [ -e "${NAME}" ] && . "${NAME}"

  # load windows specific settings, case they exist
  NAME="${CONFIG_FILES_DIR}/${CONFIG_DOT_PREFIX}bashrc.cygwin"
  [ -e "${NAME}" ] && . "${NAME}"

  NAME="${CONFIG_FILES_DIR}/${CONFIG_DOT_PREFIX}bashrc.local"
  [ -e "${NAME}" ] && . "${NAME}"

  # try using faster vim for fc
  export HISTCONTROL=erasedups:ignoredups
fi

export PATH="${HOME}/bin":${PATH}
