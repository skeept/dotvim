*gin.txt*					Gin makes you drunk with Git

Author:  Alisue <lambdalisue@gmail.com>
License: MIT License (See LICENSE)


=============================================================================
CONTENTS					*gin-contents*

INTRODUCTION			|gin-introduction|
REQUIREMENTS			|gin-requirements|
USAGE				|gin-usage|
  ACTION			  |gin-action|
  PROXY				  |gin-proxy|
INTERFACE			|gin-interface|
  COMMANDS			  |gin-commands|
  VARIABLES			  |gin-variables|
  FUNCTIONS			  |gin-functions|
  COMPONENTS			  |gin-components|
  MAPPINGS			  |gin-mappings|
  ACTIONS			  |gin-actions|


=============================================================================
INTRODUCTION					*gin-introduction*

Gin ( *gin.vim* ) is a plugin to handle git repository from Vim/Neovim.


=============================================================================
REQUIREMENTS					*gin-requirements*

Gin is written in denops so users need to install denops.vim

denops.vim~
	An ecosystem for writing Vim/Neovim plugin in Deno.
	https://github.com/vim-denops/denops.vim


=============================================================================
USAGE						*gin-usage*

-----------------------------------------------------------------------------
ACTION						*gin-action*

Action is a special mapping that is defined on a gin buffer and is looked like:

	<Plug>(gin-action-{name})

where {name} is a name of the action.

						*gin-action-mapping*
Gin defines the following mappings for actions:

	"?"	List mappings/actions available
	"a"	Open a prompt to input action to execute
	"."	Repeat previous action which has executed from a prompt

Users have to define alternative mappings to disable default mappings like:
>
	" Use g? to show help instead of ?
	nmap <buffer> g? <Plug>(gin-action-help)

See |gin-actions| for all actions available.

-----------------------------------------------------------------------------
PROXY						*gin-proxy*

Gin proxies prompts and editors used by git commands to running Vim by
overriding "GIT_ASKPASS" and "GIT_EDITOR" environment variables.
This means that whether you invoke "git commit" via the "Gin" command or via
the Vim |terminal|, a new buffer will be opened instead of Vim being launched
nested.

This feature is almost equivalent to askpass.vim and/or guise.vim, but
simplified to focus on git.

askpass.vim~
	https://github.com/lambdalisue/askpass.vim

guise.vim~
	https://github.com/lambdalisue/guise.vim

It can live together with the plugins mentioned above because the environment
variable names used are different.

Use |g:gin_proxy_disable_askpass| and/or |g:gin_proxy_disable_editor| to
disable this proxy feature.


=============================================================================
INTERFACE					*gin-interface*

-----------------------------------------------------------------------------
COMMANDS					*gin-commands*

							*:Gin*
:Gin[!] [++{option}...] {command} [{args}]
:Gin[!] [++{option}...] ++buffer[={expr}] [++monochrome] {command} [{args}]
	Call a git raw {command} with {args} asynchronously and echo result.
	For example, "Gin add %" on "hello.txt" invokes "git add hello.txt".
	If a bang (!) is specified, it calls command synchronously instead.
	See |gin-command-options| for available {option}s.
	If ++buffer option is specified, it opens a |scratch-buffer| or render
	to {expr} buffer to show the result of the command.
	If ++monochrome option is specified with ++buffer, no color is applied
	to the result of the command.

							*:GinBranch*
:GinBranch [++{option}...] [{flags}]
	Open a "gin-branch" buffer to show a branch list.
	See |gin-command-options| for available {option}s.

	The following {flags} are available:

	-a, --all
	-r, --remotes
	-i, --ignore-case
	--abbrev={n}
	--no-abbrev
		
	See ":man git-branch(1)" for detail about {flags}.

	Several default mappings are defined in the buffer. Use "help" action
	to see mappings or disable by |g:gin_branch_disable_default_mappings|.

							*:GinChaperon*
:GinChaperon [++{option}...] {path}
:GinChaperon [++{option}...] ++no-theirs {path}
:GinChaperon [++{option}...] ++no-ours {path}
	Open three main buffers (THEIRS, WORKTREE, and OURS) and three
	supplemental buffers to solve conflicts on {path}.
	See |gin-command-options| for available {option}s.
	If ++no-theirs is specified, it does not open a THEIRS buffer.
	If ++no-ours is specified, it does not open a OURS buffer.

	Use |g:gin_chaperon_supplement_disable| to disable supplemental
	buffers.
	Use |g:gin_chaperon_supplement_height| to regulate the height of
	supplemental buffers.

	Users can use the following mappings in each buffers or disable
	default mappings by |g:gin_chaperon_disable_default_mappings|.

	THEIRS~
	|<Plug>(gin-diffput)|		Assigned to "dp" in default.

	WORKTREE~
	|<Plug>(gin-diffget)|		Assigned to "do" in default.
	|<Plug>(gin-diffget-l)|		Assigned to "dol" in default.
	|<Plug>(gin-diffget-r)|		Assigned to "dor" in default.

	OURS~
	|<Plug>(gin-diffget)|		Assigned to "do" in default.

							*:GinDiff*
:GinDiff [++{option}...] [{flags}] {path}
:GinDiff [++{option}...] [{flags}] --cached {path}
:GinDiff [++{option}...] [{flags}] {commitish} {path}
	Open a "gin-diff" buffer of a file.
	See |gin-command-options| for available {option}s.

	Users can use the following mappings in each buffers or disable
	default mappings by |g:gin_diff_disable_default_mappings|.

	|<Plug>(gin-diffjump-old)|	Assigned to "g<CR>" in default.
	|<Plug>(gin-diffjump-new)|	Assigned to "<CR>" in default.

	The following {flags} are available:

	--cached
	--renames/--no-renames
	--diff-filter={filter}
	-R
	--ignore-cr-at-eol
	--ignore-space-at-eol
	--ignore-space-change/-b
	--ignore-all-space/-w
	--ignore-blank-lines
	--ignore-matching-lines={regex}/-I={regex}
	--ignore-submodules[=none/untracked/dirty/all]
		
	See ":man git-diff(1)" for detail about {flags}.

							*:GinEdit*
:GinEdit [++{option}...] {path}
:GinEdit [++{option}...] --cached {path}
:GinEdit [++{option}...] {commitish} {path}
	Open a local {path} or "gin-edit" buffer of a file.
	See |gin-command-options| for available {option}s.

	If --cached flag is specified, it opens a buffer that shows content
	in INDEX rather than the local working tree. The buffer is modifiable
	and write the buffer to apply changes on INDEX.

	If {commitish} is specified, it opens a buffer that shows content
	in the {commitish} rather than the local working tree.

							*:GinPatch*
:GinPatch [++{option}...] {path}
:GinPatch [++{option}...] ++no-head {path}
:GinPatch [++{option}...] ++no-worktree {path}
	Open three buffers (HEAD, INDEX, and WORKTREE) to patch changes of
	{path}.
	See |gin-command-options| for available {option}s.
	If ++no-head is specified, it does not open a HEAD buffer.
	If ++no-worktree is specified, it does not open a WORKTREE buffer.

	Users can use the following mappings in each buffers or disable
	default mappings by |g:gin_patch_disable_default_mappings|.

	HEAD~
	|<Plug>(gin-diffput)|		Assigned to "dp" in default.

	INDEX~
	|<Plug>(gin-diffput)|		Assigned to "dp" in default.
	|<Plug>(gin-diffget)|		Assigned to "do" in default.
	|<Plug>(gin-diffget-l)|		Assigned to "dol" in default.
	|<Plug>(gin-diffget-r)|		Assigned to "dor" in default.

	WORKTREE~
	|<Plug>(gin-diffput)|		Assigned to "dp" in default.
	|<Plug>(gin-diffget)|		Assigned to "do" in default.

							*:GinStatus*
:GinStatus [++{option}...] [{flags}]
	Open a "gin-status" buffer to show a status.
	See |gin-command-options| for available {option}s.

	The following {flags} are available:

	-u[=no/normal/all], --untracked-files[=no/normal/all]
	--ignore-submodules[=none/untracked/dirty/all]
	--ignored[=traditional/no/matching]
	--renames/--no-renames
	--find-renames[={n}]
		
	See ":man git-status(1)" for detail about {flags}.

	Several default mappings are defined in the buffer. Use "help" action
	to see mappings or disable by |g:gin_status_disable_default_mappings|.

							*gin-commands-options*
Gin supports several options starts with double plus signs (++) as:

++worktree={worktree}
	Specify a particular git working tree. 
							*gin-worktree*
	If this option is not specified, gin will find the one from the 
	current buffer or the current working directory. It tries to find a
	git working tree from

	1. A target working tree of gin associated buffers (e.g. gindiff://)
	2. A parent directory of a symlink resolved path of the current buffer
	3. A parent directory of a path of the current buffer
	4. A current working directory
>
	:GinStatus ++worktree=/home/john/project\ A
<
++enc={encoding}/++encoding={encoding}
	Specify 'fileencoding' option of the buffer. This option is only
	available on Gin commands that open buffer(s).
>
	:GinEdit ++enc=sjis README.md
<
++ff={fileformat}/++fileformat={fileformat}
	Specify 'fileformat' option of the buffer. This option is only
	available on Gin commands that open buffer(s).
>
	:GinDiff ++ff=mac README.md
<
							*gin-commands-silent*
Gin has limited support for |:silent| or |:silent!| modifiers to suppress
messages during command execution. Unlike normal Vim commands, only the silent
or silent! directly assigned to the command is affected. See the behavior
example for details.
>
	" Messages are suppressed
	:silent Gin status

	" Error messages are suppressed
	:silent! GinEdit HEAD README.md

	" No messages are suppressed
	:silent execute 'Gin status'
	:silent! execute 'GinEdit HEAD README.md'
<

-----------------------------------------------------------------------------
VARIABLES					*gin-variables*

*g:gin_chaperon_disable_default_mappings*
	Disable default mappings on buffers shown by |:GinChaperon|.

	Default: 0

*g:gin_chaperon_supplement_disable*
	Disable supplemental buffers on |:GinChaperon|.

	Default: 0

*g:gin_chaperon_supplement_height*
	|Number| that indicates the height of supplemental buffers of
	|:GinChaperon| command.

	Default: 10

*g:gin_diff_disable_default_mappings*
	Disable default mappings on buffers shown by |:GinDiff|.

	Default: 0

*g:gin_patch_disable_default_mappings*
	Disable default mappings on buffers shown by |:GinPatch|.

	Default: 0

*g:gin_proxy_disable_askpass*
	Disable overriding "GIT_ASKPASS" to proxy prompts.

	Default: 0

*g:gin_proxy_disable_editor*
	Disable overriding "GIT_EDITOR" to proxy editors.

	Default: 0

*g:gin_status_disable_default_mappings*
	Disable default mappings on |:GinStatus| buffer.

	Default: 0

-----------------------------------------------------------------------------
FUNCTIONS					*gin-functions*

						*gin#util#reload()*
gin#util#reload([{bufnr}])
	Reload a content of {bufnr} gin buffer.

						*gin#util#expand()*
gin#util#expand([{expr}])
	Like |expand()| but it extract a target filename if the buffer is
	gin's file-like buffer.

						*gin#util#debounce()*
gin#util#debounce({expr}, {delay})
	Execute {expr} after {delay} milliseconds and debounce all calls
	within that {delay}.

						*gin#action#fn()*
gin#action#fn({callback})
	A wrapper function to make an action mapping.
	The wrapped function is called with {xs} which is a candidate |List|
	when the action is invoked.
	Note that users MUST use <Cmd> pseudokey to define mappings like:
>
	function! s:my_custom(xs) abort
	  echo string(a:xs)
	endfunction

	noremap <buffer> <Plug>(gin-action-my-custom)
	      \ <Cmd>call gin#action#fn({ xs -> <SID>my_custom(xs) })<CR>
<
						*gin#action#call()*
gin#action#call({name}, {range})
	Invoke an action {name} with {range}. The {name} is |String| name and
	the {range} is "[firstline, lastline]" |List|.
	Note that this function uses |feedkeys()| internally.
>
	call gin#action#call('my-custom', [1, 1])
<
	       				*gin#action#list_action()*
gin#action#list_actions({bufnr})
	List all available actions of the buffer {bufnr}.

	       				*gin#action#gather_candidates()*
gin#action#gather_candidates({bufnr}, {range})
	Gather and return candidates of the buffer {bufnr} in {range}.

-----------------------------------------------------------------------------
COMPONENTS					*gin-components*

Components are |Function| that never fail and always return a string for
|statusline| and |tabline|. It returns information of a current working tree
(See |gin-worktree| for detail about how gin find a current working tree.)

Use component functions like:
>
	set statusline+=\ %{gin#component#worktree#name()}
	set statusline+=\ (%{gin#component#branch#ascii()})
	set statusline+=\ [%{gin#component#traffic#ascii()}]
<
					*gin#component#branch#ascii()*
					*gin#component#branch#unicode()*
gin#component#branch#ascii()
gin#component#branch#unicode()
	Return an indicator string of a current and upstream branches.

					*gin#component#traffic#ascii()*
					*gin#component#traffic#unicode()*
gin#component#traffic#ascii()
gin#component#traffic#unicode()
	Return an indicator string of the number of ahead and behind commits.

					*gin#component#worktree#name()*
					*gin#component#worktree#full()*
gin#component#worktree#name()
gin#component#worktree#full()
	Return an indicator string of the current working tree.

-----------------------------------------------------------------------------
MAPPINGS					*gin-mappings*

*<Plug>(gin-diffput)*
	Put a diff chunk to WORKTREE buffer.

*<Plug>(gin-diffget)*
	Get a diff chunk from WORKTREE or HEAD buffer (prefer WORKTREE.)

*<Plug>(gin-diffget-l)*
	Get a diff chunk from HEAD buffer.

*<Plug>(gin-diffget-r)*
	Get a diff chunk from WORKTREE buffer.

*<Plug>(gin-diffjump-old)*
	Jump to the corresponding line of the comparison source.

*<Plug>(gin-diffjump-new)*
	Jump to the corresponding line of the comparison.

-----------------------------------------------------------------------------
ACTIONS						*gin-actions*

NOTE that we won't list all actions available here because there are too many
of them and we cannot maintain correct documentation of that.
Use the "help" action to check what actions are available on each gin buffer.

*<Plug>(gin-action-echo)*
	Echo active action candidates for debugging.

*<Plug>(gin-action-choice)*
	Open a prompt to select an action to invoke. It will invoke selected
	action on active action candidates.
	It is mapped to "a" in default when no mapping exists.

*<Plug>(gin-action-repeat)*
	Repeat a previous action triggered from |<Plug>(gin-action-choice)|.
	Note that previous actions triggered from actual mappings are not
	repeated.
	It is mapped to "." in default when no mapping exists.

*<Plug>(gin-action-help)*
*<Plug>(gin-action-help:all)*
	Show action help.
	It is mapped to "?" in default when no mapping exists.


=============================================================================
vim:tw=78:fo=tcq2mM:ts=8:ft=help:norl
