*ctrlp-funky.txt*
A ctrlp.vim extension - pick out functions and/or something
Version: 0.5.0
Author:  Takahiro Yoshihara <http://github.com/tacahiroy>


==============================================================================
CONTENTS					*funky-contents* *ctrlp-funky*

|funky-intro|			Introduction
|funky-commands|		Commands
|funky-settings|		Settings
|funky-thanks|			Thanks
|funky-changelog|		changelog
|funky-license|			License
|funky-about|			About


==============================================================================
INTRODUCTION					*funky-intro*

ctrl-funky is an extension of ctrlp.vim.
This supports following file types:

* c/c++
* chef (resources)
* java
* javascript
* lua
* markdown
* nerdtree
* objc
* php
* python
* ruby
* sh (bash, dash and zsh)
* yaml
* vb
* vim


==============================================================================
COMMANDS					*funky-commands*

This plugin provides a command |:CtrlPFunky|. You just execute it.

						*funky-:CtrlPFunky*
:CtrlPFunky [WORD]
	Abstract lines from a current editing file.
	You can provide an argument for the command. If it's provided you can
	get lines that matches the 'WORD'.
	In fact, the argument will be inputted into the CtrlP buffer by default.

Defining a mapping for this command must be useful. >
	nnoremap <Leader>fu :CtrlPFunky<Cr>
	" Initialise list by a word under cursor
	nnoremap <Leader>fU :execute 'CtrlPFunky ' . expand('<cword>')<Cr>
<


==============================================================================
SETTINGS					*funky-settings*
You can customise the behaviour of ctrlp-funky using these variables.

						*g:ctrlp_funky_sort_by_mru*
If this is enabled (=1) the list is sorted by MRU (most recently used).
In short, a function definition what was used last time is appeared on top of
the list.
Note that the MRU feature doesn't work persistently. Therefore if you delete
the buffer or once you quit Vim, order of the list is reset to default.
(default: 0)
>
	let g:ctrlp_funky_sort_by_mru = 1 
<


						*funky-chef*
[chef]
				*funky-chef-g:ctrlp_funky_chef_lwrp*
Set this to 1 (enabled) the results will include LWRP.
http://docs.opscode.com/lwrp.html#opscode-maintained
(default: 1)
>
	let g:ctrlp_funky_chef_lwrp = 0
<

				*funky-chef-g:ctrlp_funky_chef_custom_resources*
You can set Chef resources that you defined to this variable.
The resources which are set to this variable will be picked up by |ctrlp-funky|.
http://docs.opscode.com/resource.html#common-functionality
(default: [])
>
	let g:ctrlp_funky_chef_custom_resources = ['rabbitmq', 'nodejs']
<

						*funky-php*
[php]
				*funky-php-g:ctrlp_funky_php_requires*
Set this to 1 (enabled) the results will include 'require' and
'require_once' lines.
(default: 0)
>
	let g:ctrlp_funky_php_requires = 1
<

				*funky-php-g:ctrlp_funky_php_includes*
Set this to 1 (enabled) the results will include 'include' and
'include_once' lines.
(default: 0)
>
	let g:ctrlp_funky_php_include = 1
<

						*funky-ruby*
[ruby]
				*funky-ruby-g:ctrlp_funky_ruby_requires*
Set this to 1 (enabled) the results will include 'require' and
'require_relative' lines.
(default: 0)
>
	let g:ctrlp_funky_ruby_requires = 1
<

				*funky-ruby-g:ctrlp_funky_ruby_classes*
Set this to 1 (enabled) the results will include class definitions.
(default: 1)
>
	let g:ctrlp_funky_ruby_classes = 0
<

				*funky-ruby-g:ctrlp_funky_ruby_modules*
Set this to 1 (enabled) the results will include module definitions.
(default: 1)
>
	let g:ctrlp_funky_ruby_modules = 0
<

				*funky-ruby-g:ctrlp_funky_ruby_contains_rake*
This option is no longer available. Use |g:ctrlp_funky_ruby_rake_words|
instead. [OBSOLETE]

				*funky-ruby-g:ctrlp_funky_ruby_rake_words*
Set this to 1 (enabled) 'rake' filter will be absorbed.
(default: 0)
>
	let g:ctrlp_funky_ruby_rake_words = 1
<

				*funky-ruby-g:ctrlp_funky_ruby_chef_words*
Set this to 1 (enabled) 'chef' filter will be absorbed.
(default: 0)
>
	let g:ctrlp_funky_ruby_chef_words = 1
<
						*funky-sh*
[sh]
				*funky-sh-g:ctrlp_funky_sh_type*
In most of the case, '/bin/sh' is an alias (symlink) of an other shell such as
bash, ksh etc nowadays. You can specify the Funky's internal filetype for 'sh'.
If this is set to 'dash', the Funky treats 'sh' as 'dash'.
(default: 'bash')
>
	let g:ctrlp_funky_sh_type = 'ksh'
<


==============================================================================
THANKS						*funky-thanks*

  * *kien* <http://github.com/kien> - the author of ctrlp.vim

  * *pydave*    <https://github.com/pydave>
  * *curist*    <https://github.com/curist>
  * *Benoit*    <https://github.com/saalaa>
  * *tokorom*   <https://github.com/tokorom>
  * *robmiller* <https://github.com/robmiller>
  * *unc0*      <https://github.com/unc0>
  * *hlissner*  <https://github.com/hlissner>
  * *mephux*    <https://github.com/mephux>
  * *dusans*    <https://github.com/dusans>


==============================================================================
CHANGELOG 					*funky-changelog*

7 Sep. 2013~
  + Add MRU feature: |g:ctrlp_funky_sort_by_mru|
  + Add YAML support. (#20)
    by |dusans|

30 Aug. 2013~
  + Add javascript object function support. (#17)
    by |mephux|

27 Aug. 2013~
  + Fix "Pattern not found" line appears in the list

15 Aug. 2013~
  + Add support for Lua
    by |hlissner|

9 Aug. 2013~
  + New option: |g:ctrlp_funky_sh_type|

25 Jun. 2013~
  + Fix behaviour when buffer being opened in multiple (split) windows (#11)
  + Add multi-lined function def support in Python (#12)

17 Jun. 2013~
  + Add C support, improved C++ pattern.
    by |unc0|

23 May 2013~
  + Fix regex pattern for sh. No parentheses case can be detected.

20 May 2013~
  + New options: |g:ctrlp_funky_php_requires|,
                 |g:ctrlp_funky_php_includes|,

2 May 2013~
  + Add support for php
    by |robmiller|

25 Apr. 2013~
  + New options: |g:ctrlp_funky_chef_custom_resources|
                 |g:ctrlp_funky_chef_lwrp|

20 Apr. 2013~
  + Add support for Chef recipe

11 Apr. 2013~
  + Fix regexp pattern for sh

3 Apr. 2013~
  + Add support for Visual Basic (vb)

22 Mar. 2013~
  + Add the command can take an argument for initialisation

12 Feb. 2013~
  + Add 'get_filter' method in each filter to disclose own filter
  + Add support for Objective-C (objc)
    by |tokorom|

27 Jan. 2013~
  + Add support for Shell Script (bash)
  + Add support for Z shell (zsh)
  - Delete all buffer mode

21 Jan. 2013~

  + New options: |g:ctrlp_funky_ruby_requires|,
                 |g:ctrlp_funky_ruby_classes|,
                 |g:ctrlp_funky_ruby_modules|,
                 |g:ctrlp_funky_ruby_contains_rake|

20 Jan. 2013~
  + Add class filter for python
    by |Benoit|

14 Jan. 2013~
  + Add support for javascript
    by |curist|

06 Jun. 2012~
  + Add support for python
  + Add support for C++ (cpp)
  + Add support for java
    by |pydave|

Initial release: 25 Feb. 2012~


==============================================================================
LICENSE						*funky-license*

|ctrlp-funky| is released under the MIT License.

Copyright (c) 2012-2013 Takahiro Yoshihara

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.


==============================================================================
ABOUT                                           *funky-about*

The latest version is available on GitHub:

https://github.com/tacahiroy/ctrlp-funky


vim:fen:tw=78:et:ts=8:ft=help:norl:
