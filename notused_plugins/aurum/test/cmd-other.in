:let g:r={'-': g:curtest.'repo', '^': 'hgtestbranchedrepo'}
:function R(s)
    return get(g:r, a:s, 'cmd-other-'.a:s)
 endfunction
:function S(s)
    return substitute(a:s, '@[\^\-A-Z]', '\=R(submatch(0)[1])', 'g')
 endfunction
:command -nargs=1       AL  :execute "W{{{1 ".<q-args>.": initial state\nRun! AuLog ".R(<q-args>) | bwipeout
:command -nargs=1 -bang AO  :let a=<q-args> | execute "AuOther<bang> ".S(a[2:]) | execute "Run! AuLog ".R(a[0]) | bwipeout
:command -nargs=1 -bang AOa :let a=<q-args> | execute "cd ".R(a[0])."\nAuOther<bang> ".S(a[2:]) | execute "Run! AuLog" | bwipeout | cd -
:command -nargs=1 -bang AOb :let a=<q-args> | execute "cd ".R(a[0])."\nAuOther<bang> ".S(a[4:]) | cd - | execute "Run! AuLog ".R(a[2]) | bwipeout
:AL A
:AL B
:AL C
:AL -
:AL ^
:W{{{1 A: default push C from B
:AOb B A push C
:W{{{1 A: default push from B
:AOb B A push
:W{{{1 A: default pull E from ^
:AOa A pull E
:W{{{1 A: default pull from ^
:AOa A pull
:W{{{1 B: push E from ^
:AOb ^ B push E ../@B
:W{{{1 B: push from ^
:AOb ^ B push : ../@B
:W{{{1 C: pull E from ^
:AOa C pull E ../@^
:W{{{1 C: pull from ^
:AOa C pull : ../@^
:W{{{1 A: pull from -
:AOa A pull : ../@-
:W{{{1 A: forced pull from -
:AOa!A pull : ../@-
:W{{{1 B: push from -
:AOb - B push : ../@B
:W{{{1 B: forced push from -
:AOb!- B push : ../@B
:W{{{1 C: forced pull from - to C
:AO! C pull : @- @C
