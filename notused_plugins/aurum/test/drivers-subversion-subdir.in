:let g:curtest='svntest-subdir'
:let g:tipname='HEAD'
:let g:testedfile='svntest-subdirrepo/file-2'
:command -nargs=0 WTF call WriteFile(readfile(g:testedfile, 'b'))
:W{{{1 Annotate
:Run! AuAnnotate file ./svntest-subdirrepo/file-2 | wincmd w
:bwipeout!
:bwipeout!
:W{{{1 Log: everything
:Run! AuLog ./svntest-subdirrepo/ stat patch showfiles showrenames showcopies
:bwipeout!
:W{{{1 Status: current
:R call writefile(['Unknown file contents'], 'unknown-file')
:R call writefile(['New file contents'], 'new-file')
:AuTrack ./svntest-subdirrepo/new-file
:R call delete('file-2')
:AuJunk ./svntest-subdirrepo/pqr
:AuJunk ignoreglob ./svntest-subdirrepo/ghi
:Run AuStatus
:bwipeout!
:R call writefile(['Zero line'], 'file-2')
:W{{{1 Status: relative to other (1)
:Run AuStatus rev 4
:bwipeout!
:W{{{1 Status: relative to other (2)
:Run AuStatus wdrev 4
:bwipeout!
:W{{{1 Status: between two revisions
:R !svn revert -R .
:Run! AuStatus ./svntest-subdirrepo/ rev HEAD wdrev 4
:bwipeout!
:W{{{1 Commit
:edit ./svntest-subdirrepo/newfile.vim
iW In file newfile.vim:write
:AuCommit message Added\ newfile.vim type unknown ./svntest-subdirrepo/newfile.vim
:WT
:W{{{1 Commit 2
oW File newfile.vim, second line:write
:Run! AuCommit
Added second line to newfile.vim
// It was not required really:write
:WT
:W{{{1 File
:AuUpdate
:let cs=aurum#changeset()
:execute 'Run! AuFile '.(cs.rev-1)
:bwipeout!
:W{{{1 Update
:AuUpdate 6 ./svntest-subdirrepo/
:WTF
:W{{{1 Update: force
:write! ./svntest-subdirrepo/file-2
:AuUpdate! 7 ./svntest-subdirrepo/
:WTF
:W{{{1 Update: to tip
:R AuUpdate
:WTF
:W{{{1 Move
:AuMove ./svntest-subdirrepo/pqr ./svntest-subdirrepo/stu
:AuCommit message Moved\ pqr\ to\ stu repo ./svntest-subdirrepo/ all
:WTa showrenames showcopies
:W{{{1 Move: copy
:AuMove copy ./svntest-subdirrepo/stu ./svntest-subdirrepo/pqr
:AuCommit message Copied\ stu\ to\ pqr repo ./svntest-subdirrepo/ all
:WTa showrenames showcopies
:W{{{1 Junk: forget, remove
:call WriteFile(filereadable('./svntest-subdirrepo/pqr').filereadable('./svntest-subdirrepo/stu'))
:AuJunk forget ./svntest-subdirrepo/pqr
:AuJunk remove ./svntest-subdirrepo/stu
:call WriteFile(filereadable('./svntest-subdirrepo/pqr').filereadable('./svntest-subdirrepo/stu'))
:AuCommit ./svntest-subdirrepo/**
ggddGld:write
:WT
:W{{{1 Grep: working directory
:Run! AuGrep W repo ./svntest-subdirrepo/ | cwindow
:cclose
:W{{{1 Grep: HEAD
:let repo=aurum#repository()
:Run! AuGrep W revision HEAD repo ./svntest-subdirrepo/ | cwindow
:cclose
:W{{{1 Junk: ignore, ignoreglob
:write! ./svntest-subdirrepo/file.vim
:write! ./svntest-subdirrepo/ignoredfile.vim
:write! ./svntest-subdirrepo/ignoredfile2.vim
:W{{{2 Status before junk
:Run! AuStatus ./svntest-subdirrepo/
:bwipeout!
:AuJunk ignore ./svntest-subdirrepo/file.vim
:AuJunk ignoreglob ./svntest-subdirrepo/ignored*
:W{{{2 Status after junk
:Run! AuStatus ./svntest-subdirrepo/
:bwipeout!
:source addEmessages.vim
