*vim-leader-guide.txt*      A vim key-guide.
*leader-guide*

=============================================================================
CONTENTS                                                *leader-guide-contents*

Overview                                    |leader-guide-overview|
Usage examples                              |leader-guide-examples|

Commands                                    |leader-guide-commands|
Functions                                   |leader-guide-functions|
Configuration                               |leader-guide-configuration|

CHANGELOG                                   |leader-guide-changelog|


=============================================================================
OVERVIEW                                                *leader-guide-overview*

|vim-leader-guide| is a plugin to explore keymaps.

Features:
  - Show keymaps assigned to a specific prefix, such as leader, localleader or
    any other key.
  - Show all global and buffer-local keymaps.
  - Provide additional descriptions for mappings and groups of mappings


=============================================================================
USAGE EXAMPLES                                          *leader-guide-examples*


=============================================================================
COMMANDS                                                *leader-guide-commands*

|vim-leader-guide| provides the following ex-commands:
    LeaderGuide '(String)'                          |LeaderGuide|
    LeaderGuideVisual '(String)'                    |LeaderGuideVisual|
    LeaderGuideD '(String)'                         |LeaderGuideD|
    LeaderGuideVisualD '(String)'                   |LeaderGuideVisualD|



    Todo: write something up...
                                                        *LeaderGuide*
:LeaderGuide~


                                                        *LeaderGuideVisual*
:LeaderGuideVisual~


                                                        *LeaderGuideD*
:LeaderGuideD~


                                                        *LeaderGuideVisualD*
:LeaderGuideVisualD~



=============================================================================
FUNCTIONS                                              *leader-guide-functions*

                                   *leaderGuide#register_prefix_descriptions()*
leaderGuide#register_prefix_descriptions("{prefix}", "{dictname}")
    Provide the guide with a description dictionary. This dictionary is used
    to provide convenient names for mappings to display in the guide popup.
    Additionally it is used to provide group names.

    See also: |leader-guide-examples|

    Types:
        {prefix}:   String
        {dictname}: String

    Examples:
>
    " register dictionary for the <Space>-prefix
    call leaderGuide#register_prefix_descriptions(' ', "g:space_prefix_dict")
    " register dictionary for the ,-prefix
    call leaderGuide#register_prefix_descriptions(',', "g:comma_prefix_dict")

    " register a top-level dictionary:
    let g:space_prefix_dict['name'] = '<leader>'
    let g:space_prefix_dict[','] = '<localleader>'
    let g:globalguide = {}
    let g:globalguide[' '] = g:space_prefix_dict
    let g:globalguide[','] = g:comma_prefix_dict
    call leaderGuide#register_prefix_descriptions("", "g:globalguide")
<
    Note: To pass a top-level dictionary call the function with an empty
    prefix string

    Note: Please use either a single top-level dictionary, or one or more
    prefix specific dictionarys. Don't mix a top-level with prefix specific
    dictionarys.
    Instead, as shown above, insert the prefix specific dictionarys into the
    top-level one and pass only the latter to the guide.

    Note: After passing a dictionary name to the guide do not unlet the actual
    global dictionary. It is possible update the guide descriptions on the fly
    by changing g:dict.
        

=============================================================================
CONFIGURATION                                      *leader-guide-configuration*

|vim-leader-guide| uses the following configuration variables:

    ----------------------------------------------------------~
     VAR                                             DEFAULT ~
    ----------------------------------------------------------~
     |g:leaderGuide_position|                         `botright`
     |g:leaderGuide_vertical|                                `0`
     |g:leaderGuide_hspace|                                  `5`
     |g:leaderGuide_run_map_on_popup|                        `5`

*g:leaderGuide_position*
    Set the direction from witch the guide-buffer should pop up.

    Possible values:        `botright`, `topleft`
    Default:                `botright`

    Note: Use in conjunction with |g:leaderGuide_vertical| to set the
    buffer-position


*g:leaderGuide_vertical*
    If set to a value other than 0, the guide buffer will pop up in vertical
    split window.

    Possible values:        {0,1}
    Default:                0

    Note: Use in conjunction with |g:leaderGuide_position| to set the
    buffer-position


*g:leaderGuide_hspace*
    Sets the minimum horizontal space between the displayed colomns.

    The actual column width is the length of the longest entry plus this
    value.

    Possible values:        {Number}
    Default:                5


*g:leaderGuide_run_map_on_popup*
    If set to 0, |vim-leader-guide| will not parse mappings when opening a
    guide buffer. It will used cached values instead.

    Note: It is not recommended to disable this option. Mappings change during
    a vim-session, when changing the filetype or buffer for example.
    Thus, when disabling this option the displayed mappings might get
    outdated.

    Possible values:        {0,1}
    Default:                1

============================================================================
CHANGELOG                                              *leader-guide-changelog*

    2016-04-10:     - Support for {count}, and register passthrough
                    - Rename g:leaderGuide_vspace -> g:leaderGuide_hspace
                    - Started documentation

=============================================================================
 vim:tw=78:ts=8:ft=help:norl:
